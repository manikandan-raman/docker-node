name: CICD

on:
  push:
    paths-ignore:
      - '**/README.md'
    branches: [cicd-ec2-pipeline]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: node-docker
          IMAGE_TAG: v1
          REPOSITORY: node-docker-poc
        run: |
          docker build \
            -t $IMAGE_NAME:$IMAGE_TAG \
            --no-cache \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_DATABASE=${{ secrets.DB_DATABASE }} \
            --build-arg SERVER_HOST=${{ secrets.SERVER_HOST }} \
            --build-arg SERVER_PORT=${{ secrets.SERVER_PORT }} \
            .
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: [ubuntu-latest]
    steps:
      - name: Connect to EC2 instance and deploy
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: node-docker
          IMAGE_TAG: v1
          REPOSITORY: node-docker-poc
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -x
            aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 325183202751.dkr.ecr.ap-southeast-1.amazonaws.com/node-docker-poc
            docker pull 325183202751.dkr.ecr.ap-southeast-1.amazonaws.com/node-docker-poc:v1
            docker stop my-container || true
            docker rm my-container || true
            docker run -d -p 5000:5000 --name my-container 325183202751.dkr.ecr.ap-southeast-1.amazonaws.com/node-docker-poc:v1